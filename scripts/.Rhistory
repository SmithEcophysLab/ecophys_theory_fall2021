## load packages (install prior if not done already)
library(plantecophys)
## load packages
require(plantecophys)
## load packages
install.packages('plantecophys')
install.packages('photosynthesis')
library(photosynthesis)
## load in data
aci_data <- read.csv('../data/licor/aci_10.06_clean.csv')
aq_data <- read.csv('../data/licor/aq_10.06_clean.csv')
## examine the data
head(aci_data)
library(ggplot2)
aci_data_plot <- ggplot(data = aci_data, aes(x = Ci, y = A)) +
geom_point()
aci_data_plot
head(aq_data)
aq_data_plot <- ggplot(data = aq_data, aes(x = Qin, y = A)) + # make a quick scatterplot
geom_point()
aq_data_plot
?fit_aci_response
## curve fitting and exploration with photosynthesis package
### aci curve using function fit_aci_response
aci_fit <- fit_aci_response(aci_data, varnames = list(A_net = "A", C_i = "Ci"))
## curve fitting and exploration with photosynthesis package
### aci curve using function fit_aci_response
aci_fit <- fit_aci_response(aci_data,
varnames = list(A_net = "A", T_leaf = "Tleaf" C_i = "Ci"))
## curve fitting and exploration with photosynthesis package
### aci curve using function fit_aci_response
aci_fit <- fit_aci_response(aci_data,
varnames = list(A_net = "A", T_leaf = "Tleaf" C_i = "Ci"))
## curve fitting and exploration with photosynthesis package
### aci curve using function fit_aci_response
aci_fit <- fit_aci_response(aci_data,
varnames = list(A_net = "A", T_leaf = "Tleaf", C_i = "Ci"))
# 1. define a light grouping factor in data
aci_data$Q_2 <- as.factor((round(aci_data$Qin, digits = 0)))
# 2. convert Tleaf to K
aci_data$T_leaf <- aci_data$Tleaf + 273.15
aci_data$Qin
aci_data$Q_2
aci_fit <- fit_aci_response(aci_data[aci_data$Q_2 == 1500, ],
varnames = list(A_net = "A",
T_leaf = "Tleaf",
C_i = "Ci",
PPFD = "Qin"))
aci_data[aci_data$Q_2 == 1500, ]
fit_aci_response(aci_data[aci_data$Q_2 == 1500, ],
varnames = list(A_net = "A",
T_leaf = "Tleaf",
C_i = "Ci",
PPFD = "Qin"))
aci_fit <- fit_aci_response(aci_data[aci_data$Q_2 == 1500 & A > 0, ],
varnames = list(A_net = "A",
T_leaf = "Tleaf",
C_i = "Ci",
PPFD = "Qin"))
## examine the data
head(aci_data) # view first 6 rows
aci_data_plot <- ggplot(data = aci_data, aes(x = Ci, y = A)) + # make a quick scatterplot
geom_point()
aci_data_plot
aci_fit <- fit_aci_response(aci_data[aci_data$Q_2 == 1500, ],
varnames = list(A_net = "A",
T_leaf = "Tleaf",
C_i = "Ci",
PPFD = "Qin"))
aci_fit
aci_fit <- fit_aci_response(aci_data[aci_data$Q_2 == 1500 & aci_data$A > 0, ],
varnames = list(A_net = "A",
T_leaf = "Tleaf",
C_i = "Ci",
PPFD = "Qin"))
aci_data$Tleaf
# 2. convert Tleaf to K
aci_data$T_leaf <- aci_data$Tleaf + 273.15
aci_fit <- fit_aci_response(aci_data[aci_data$Q_2 == 1500 & aci_data$A > 0, ],
varnames = list(A_net = "A",
T_leaf = "Tleaf",
C_i = "Ci",
PPFD = "Qin"))
# 1. define a light grouping factor in data
aci_data$Q_2 <- as.factor((round(aci_data$Qin, digits = 0)))
# 2. convert Tleaf to K
aci_data$T_leaf <- aci_data$Tleaf + 273.15
aci_fit <- fit_aci_response(aci_data[aci_data$Q_2 == 1500 & aci_data$A > 0, ],
varnames = list(A_net = "A",
T_leaf = "Tleaf",
C_i = "Ci",
PPFD = "Qin"))
fit <- fit_aci_response(aci_data[aci_data$Q_2 == 1500, ],
varnames = list(
A_net = "A",
T_leaf = "T_leaf",
C_i = "Ci",
PPFD = "Qin"
)
)
aci_fit <- fit_aci_response(aci_data[aci_data$Q_2 == 1500, ],
varnames = list(A_net = "A",
T_leaf = "T_leaf",
C_i = "Ci",
PPFD = "Qin"))
# 4. view fitted parameters
aci_fit[[1]]
# 5. view graph
aci_fit[[2]]
# 6. view data with modeled parameters attached
aci_fit[[3]]
### try with option fitTPU == F
aci_fit_noTPU <- fit_aci_response(aci_data[aci_data$Q_2 == 1500, ],
varnames = list(A_net = "A",
T_leaf = "T_leaf",
C_i = "Ci",
PPFD = "Qin"),
fitTPU == F)
### try with option fitTPU == F
aci_fit_noTPU <- fit_aci_response(aci_data[aci_data$Q_2 == 1500, ],
varnames = list(A_net = "A",
T_leaf = "T_leaf",
C_i = "Ci",
PPFD = "Qin"),
fitTPU = F)
aci_fit_noTPU[[1]]
# 4. view fitted parameters
aci_fit[[1]]
aci_fit_noTPU[[2]]
# 7. compile parameters into dataframe for analysis
aci_fit_pars <- compile_data(aci_fit,
output_type = "dataframe",
list_element = 1
)
# 7. compile parameters into dataframe for analysis
aci_fit_pars <- compile_data(aci_fit,
output_type = "dataframe",
list_element = 1
)
aci_fit_pars
# 3. fit curve (see ?fit_aci_response for more options)
aci_fit <- fit_aci_response(aci_data,
varnames = list(A_net = "A",
T_leaf = "T_leaf",
C_i = "Ci",
PPFD = "Qin"))
# 4. view fitted parameters
aci_fit[[1]]
### try with option fitTPU = F
aci_fit_noTPU <- fit_aci_response(aci_data,
varnames = list(A_net = "A",
T_leaf = "T_leaf",
C_i = "Ci",
PPFD = "Qin"),
fitTPU = F)
?fit_aq_response
### aq curve fitting with fit_aq_response
# 1. fit curve (see ?fit_aq_curve for more options)
aq_fit <- fit_aq_response(aq_data,
varnames = list(A_net = "A",
PPFD = "Qin"))
# 2. print model summary
aq_fit[[1]]
aq_data_plot
# 3. print fitted parameters
aq_fit[[2]]
# 4. print graph
aq_fit[[3]]
?photo
### photosynthesis modeling
bake_par <- make_bakepar()
?make_bakepar
constants <- make_constants(use_tealeaves = FALSE)
bake_par
constants
constants <- make_constants(use_tealeaves = FALSE) # define a variety of constants
enviro_par <- make_enviropar(use_tealeaves = FALSE)
enviro_par
enviro_par <- make_enviropar(use_tealeaves = FALSE) # environmental variables
leaf_par <- make_leafpar(use_tealeaves = FALSE)
leaf_par
leaf_par <- make_leafpar(use_tealeaves = FALSE) # leaf constants
photo(leaf_par, enviro_par, bake_par, constants,
use_tealeaves = FALSE
)
set_units(c(293.14, 298.15), "K")
## if you want to do this over multiple parameter sets
leaf_par <- make_leafpar(
replace = list(
T_leaf = set_units(c(293.14, 298.15), "K")
), use_tealeaves = FALSE
)
photosynthesis(leaf_par, enviro_par, bake_par, constants,
use_tealeaves = FALSE
)
## if you want to do this over multiple parameter sets
leaf_par <- make_leafpar(
replace = list(
T_leaf = set_units(seq(288.14, 298.15, 1), "K")
), use_tealeaves = FALSE
)
photosynthesis(leaf_par, enviro_par, bake_par, constants,
use_tealeaves = FALSE
)
## if you want to do this over multiple parameter sets
leaf_par <- make_leafpar(
replace = list(
T_leaf = set_units(seq(288.14, 308.15, 1), "K")
), use_tealeaves = FALSE
)
photosynthesis(leaf_par, enviro_par, bake_par, constants,
use_tealeaves = FALSE
)
